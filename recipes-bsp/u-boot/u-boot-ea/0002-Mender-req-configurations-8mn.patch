diff --git a/configs/mx8mnea-ucom_defconfig b/configs/mx8mnea-ucom_defconfig
index 71d3b69..ece6e6e 100644
--- a/configs/mx8mnea-ucom_defconfig
+++ b/configs/mx8mnea-ucom_defconfig
@@ -72,3 +72,12 @@ CONFIG_SPL_IMX_ROMAPI_SUPPORT=y
 CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x48000000
 
 CONFIG_SPL_GZIP=y
+
+# Mender support
+CONFIG_BOOTCOUNT_LIMIT=y
+CONFIG_BOOTCOUNT_ENV=y
+
+# Improve boot time. The function ext4load takes about 40s to load
+# the kernel image (19 MB) without block cache being enabled
+CONFIG_BLOCK_CACHE=y
+
diff --git a/include/configs/mx8mnea-ucom.h b/include/configs/mx8mnea-ucom.h
index c29c956..aba6779 100644
--- a/include/configs/mx8mnea-ucom.h
+++ b/include/configs/mx8mnea-ucom.h
@@ -135,25 +135,25 @@
 	CONFIG_MFG_ENV_SETTINGS \
 	JAILHOUSE_ENV \
 	"script=boot.scr\0" \
-	"image=Image\0" \
+	"image=boot/Image\0" \
 	"console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200\0" \
 	"fdt_addr=0x43000000\0"			\
 	"fdt_high=0xffffffffffffffff\0"		\
 	"boot_fdt=try\0" \
-	"fdt_file=" CONFIG_DEFAULT_FDT_FILE "\0" \
+	"fdt_file=boot/" CONFIG_DEFAULT_FDT_FILE "\0" \
 	"initrd_addr=0x43800000\0"		\
 	"initrd_high=0xffffffffffffffff\0" \
 	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
 	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) "\0" \
 	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
 	"mmcautodetect=yes\0" \
-	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot} " \
+	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mender_kernel_root} " \
 		"${args_from_script}\0" \
 	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
 	"bootscript=echo Running bootscript from mmc ...; " \
 		"source\0" \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+	"loadimage=ext4load ${mender_uboot_root} ${loadaddr} ${image}\0" \
+	"loadfdt=ext4load ${mender_uboot_root} ${fdt_addr} ${fdt_file}\0" \
 	"mmcboot=echo Booting from mmc ...; " \
 		"run mmcargs; " \
 		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
@@ -192,9 +192,13 @@
 		   "if run loadbootscript; then " \
 			   "run bootscript; " \
 		   "else " \
+			   "run mender_setup; " \
 			   "if run loadimage; then " \
 				   "run mmcboot; " \
-			   "else run netboot; " \
+				   "run mender_try_to_recover; " \
+			   "else " \
+				   "run mender_try_to_recover; " \
+				   "run netboot; " \
 			   "fi; " \
 		   "fi; " \
 	   "else booti ${loadaddr} - ${fdt_addr}; fi"
@@ -214,7 +218,8 @@
 #define CONFIG_ENV_OVERWRITE
 
 /* Default ENV offset is 4MB for SD/EMMC/FSPI, but NAND uses 60MB offset, overridden by env_get_offset */
-#define CONFIG_ENV_OFFSET		(SZ_2M - CONFIG_ENV_SIZE)
+/* Use mender default instead */
+/*#define CONFIG_ENV_OFFSET		(SZ_2M - CONFIG_ENV_SIZE)*/
 
 #define CONFIG_ENV_SECT_SIZE		(64 * 1024)
 #define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
@@ -222,9 +227,10 @@
 #define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MODE
 #define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPEED
 
-#define CONFIG_ENV_SIZE			SZ_8K
+/* Use mender default instead */
+/*#define CONFIG_ENV_SIZE			SZ_8K*/
 #define CONFIG_SYS_MMC_ENV_DEV		1   /* USDHC2 */
-#define CONFIG_SYS_MMC_ENV_PART		1   /* 0=user area, 1=1st MMC boot part., 2=2nd MMC boot part. */
+#define CONFIG_SYS_MMC_ENV_PART		0   /* 0=user area, 1=1st MMC boot part., 2=2nd MMC boot part. */
 #define CONFIG_MMCROOT			"/dev/mmcblk1p2"  /* USDHC2 */
 
 /* Size of malloc() pool */
